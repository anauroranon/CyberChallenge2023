import gmpy2
from sympy import *
from Crypto.Util.number import long_to_bytes



n = 137872565147175999522195169011930287128551977065777906208900888411936245005919842065887740771703398301386665180853245040538177673662890985467827811692622961972945415419694472688937546531206450469496052936388232298793012506359341373961939271581568142613956143005697330895897330045261192105269155234663777773233
e = 65537
ct = 7279733112335169485421239746022840934497935700471414868088754449429050444073088703141226793615507571812074683684654762779327646302260649838367049127864519778652226024124787411052671308862849463853893182283870179679885866802632797036057620764760425251599261203486906316043131066300972004684530275977935023123

tmp = int(gmpy2.iroot(n,2)[0])

ng = 0
while(ng != n):
    # Checking next
    p=nextprime(tmp)
    q=nextprime(p)
    ng = p*q
    if ng == n:
        break

    # Checking prev
    p=prevprime(tmp)
    q=nextprime(p)
    ng = p*q
    if ng == n:
        break


    tmp = prevprime(tmp)


fi=(p-1)*(q-1)
d=pow(e, -1, fi)

pt = long_to_bytes(pow(ct, d, n))
print(pt.decode())
